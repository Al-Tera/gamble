{"version":3,"sources":["images/paper.svg","images/rock.svg","images/scissors.svg","Components/Rockps.js","Components/Fourofour.js","Components/Navigator.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Rockps","useState","cardset","setCardset","instruct","setInstruct","menu","setMenu","pick","setPick","playercards","setPlayercards","compcards","setCompcards","compfinish","setCompfinish","comphasit","setComphasit","playerscore","setPlayerscore","compscore","setCompscore","result","setResult","cardslength","setCardslength","generateUniqueNumber","limit","randomselector","Math","floor","random","includes","generateUniqueNumber30","arr","nc","arr2","rnum","Number","locate","useEffect","newarray","cardsHandlre","e","namecard","target","classList","split","join","player","document","querySelectorAll","style","opacity","pointerEvents","console","log","transform","forEach","i","setTimeout","querySelector","push","add","replace","cardSelectedfromDeck","userturn","window","innerHeight","compselect","randomturner","innerWidth","setUserturn","remove","getImage","backgroundImage","Scissors","Rock","Paper","playerchoice","search","compchoice","className","onMouseUp","cardsetArray","fontSize","marginBottom","id","preventDefault","Array","map","animationName","fourofour","Navigator","to","Home","App","path","exact","component","Fourofour","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c480878f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/paper.239a5b38.svg\";","export default __webpack_public_path__ + \"static/media/rock.60199911.svg\";","export default __webpack_public_path__ + \"static/media/scissors.4211e2f9.svg\";","import React, {useState, useEffect} from 'react'\nimport './Rockps.css'\n\nimport Paper from '../images/paper.svg'\nimport Rock from '../images/rock.svg'\nimport Scissors from '../images/scissors.svg'\n\nfunction Rockps() {\n    // const [top,setTop] = useState()\n    // const [bottom,setBottom] = useState()\n    // const [rotate,setRotate] = useState()\n    const [cardset, setCardset] = useState()\n    const [instruct, setInstruct] = useState(false)\n    const [menu, setMenu] = useState(true)\n    const [pick, setPick] = useState(3)\n    const [playercards, setPlayercards] = useState([])\n    const [compcards, setCompcards] = useState([])\n    const [compfinish, setCompfinish] = useState(false)\n    const [comphasit, setComphasit] = useState([])\n    const [playerscore, setPlayerscore] = useState(0)\n    const [compscore, setCompscore] = useState(0)\n    const [result, setResult] = useState(\"\")\n    const [cardslength,setCardslength] = useState(3)\n\n    useEffect(()=>{\n        if(cardslength === 1){\n            if(playerscore === 2){\n                setResult(\"WIN\")\n            }\n            else if(compscore === 2){\n                setResult(\"LOSE\")\n            }\n        }\n        else if(cardslength === 0){\n            if(playerscore === compscore){\n                setResult(\"DRAW\")\n            }\n            if(playerscore < compscore){\n                setResult(\"LOSE\")\n            }\n            if(playerscore > compscore){\n                setResult(\"WIN\")\n            }\n        }\n        // console.log(\"cards length:\",cardslength)\n\n    },[cardslength, playerscore, compscore])\n\n\n    function generateUniqueNumber(limit) {\n        const randomselector = Math.floor(Math.random() * limit)\n        if (limit === 3) {\n            if (comphasit.includes(randomselector)) return generateUniqueNumber(3)\n            else setComphasit([...comphasit, randomselector]); return randomselector\n        }\n    }\n\n    function generateUniqueNumber30(arr, nc) {\n        let arr2 = [...playercards, cardset[nc]]\n        var rnum = Math.floor(Math.random() * 30)\n        rnum = Number(rnum)\n        const locate = cardset[rnum]\n        if (!arr.includes(locate) && !arr2.includes(locate)) return rnum\n        else return generateUniqueNumber30(arr)\n    }\n    let newarray = []\n\n    const cardsHandlre = (e) => {\n        let namecard = e.target.classList[0].split(\"card\").join(\"\")\n        const player = document.querySelectorAll(\".player\")\n        if (pick > 0) {\n            setPick(pick => pick - 1)\n            setPlayercards([...playercards, cardset[namecard]])\n            e.target.style.opacity = 0\n            e.target.style.pointerEvents = 'none'\n        }\n        else console.log(compcards)\n        if (pick === 3) player[0].style.transform = \"translateY(0px) rotateZ(-25deg)\"\n        if (pick === 2) player[1].style.transform = \"translateY(-20px)\"\n        if (pick === 1)\n        {\n            player[2].style.transform = \"translateY(0px) rotateZ(25deg)\"\n            document.querySelectorAll('.comp').forEach((e, i) => {\n                setTimeout(() => {\n                    if(document.querySelector(\"#start__container\")){\n                        const randomselector = generateUniqueNumber30(newarray,namecard)\n                        newarray.push(cardset[randomselector])\n                        setCompcards(newarray)\n                        e.classList.add(randomselector)\n                        document.querySelector(`.card${cardset[randomselector].replace(/\\D/g, '')}`).style.opacity = 0;\n                        e.style.transform = i === 0 ? \"translateY(0px) rotateZ(-25deg)\" : i === 1 ? \"translateY(-20px)\" : \"translateY(0px) rotateZ(25deg)\"\n                        if (i === 2) setTimeout(setCompfinish(true),1000)\n                    }\n                }, 500 * (i + 1))\n            })\n        }\n    }\n\n\n    const cardSelectedfromDeck = (e) => {\n        // const targetimg = e.target.style.backgroundImage\n        if (compfinish && userturn) {\n            // Animate Card centering\n            e.target.style.transform = `translate(0px,-${(window.innerHeight / 2) - 62}px) rotateZ(${Math.floor(Math.random() * 720) - 360}deg)`\n            e.target.style.pointerEvents= `none`\n            const randomselector = generateUniqueNumber(3)\n            const compselect = document.querySelectorAll('.comp')[randomselector]\n\n            // setCompcards(compcards.filter(item=> item!==compcards[randomselector]))\n            const randomturner = Math.floor(Math.random() * 720) - 360\n            document.querySelectorAll('.comp')[randomselector].style.transform = `translate(0px,-${(window.innerWidth / 2) - 62}px) rotateZ(${randomturner}deg)`\n            document.querySelectorAll('.comp')[randomselector].classList.add('compselect')\n            setUserturn(false)\n\n\n            // Animate Computer Card Reveal\n            setTimeout(() => {\n                compselect.classList.remove(\"noshow\")\n                const getImage = cardset[compselect.classList[1]].replace(/\\d/g, '')\n\n                compselect.style.backgroundImage = `url(${getImage === 'Scissors' ? Scissors : getImage === 'Rock' ? Rock : Paper})`\n                \n            },1150)\n            // Animate Cards removal\n\n            setTimeout(() => {\n                \n                setUserturn(true)\n\n                compselect.style.transform = `translate(0px,-${(window.innerWidth / 2) - 62}px) rotateZ(${randomturner}deg) rotateY(180deg)`\n\n                        \n                if(document.querySelector('#start__container')){\n                setCardslength(cardslength => cardslength-1)\n                document.querySelector('.compselect').classList.remove('compselect')\n\n            \n                const playerchoice = e.target.style.backgroundImage.search('rock')>0 ? 'rock' : e.target.style.backgroundImage.search('paper')>0 ? 'paper' : 'scissors'\n                // const compchoice = compselect.style.backgroundImage.search('rock')>0 ? 'rock' : compselect.style.backgroundImage.search('paper')>0 ? 'paper' : compselect.style.backgroundImage.search('scissors')>0 ? 'scissors' : ''\n                const compchoice = cardset[compselect.classList[2]].replace(/\\d/g,'') === 'Scissors' ? 'scissors' :cardset[compselect.classList[2]].replace(/\\d/g,'') === 'Paper' ? 'paper' : 'rock'\n            \n                if(playerchoice === 'scissors'){\n                    setPlayerscore(playerscore => compchoice === 'paper' ? playerscore + 1 : playerscore + 0)\n                    setCompscore(compscore => compchoice === 'rock' ? compscore + 1 : compscore + 0)\n                }\n                if(playerchoice === 'paper'){\n                    setPlayerscore(playerscore => compchoice === 'rock' ? playerscore + 1 : playerscore + 0)\n                    setCompscore(compscore => compchoice === 'scissors' ? compscore + 1 : compscore + 0)\n                }\n                if(playerchoice === 'rock'){\n                    setPlayerscore(playerscore => compchoice === 'scissors' ? playerscore + 1 : playerscore + 0)\n                    setCompscore(compscore => compchoice === 'paper' ? compscore + 1 : compscore + 0)\n                }\n}\n\n\n\n\n\n                // if (playerscore === 1) {\n                //     // setResult(playerscore === 2 ? \"WIN\" : compscore === 2 ? \"LOSE\" : \"\")\n                //     setResult( \"WIN\" )\n                //     }\n                //     else if ((playerscore === compscore) && cardslength === 0) {\n                //         setResult(\"DRAW\")\n                //     }\n                //     else if ((playerscore > compscore) && cardslength === 0) {\n                //         setResult(\"WIN\")\n                        \n                //     }\n                //     else if ((playerscore < compscore) && cardslength === 0) {\n                //         setResult(\"LOSE\")\n                //     }\n                    \n            }, 1000)\n            setTimeout(() => { e.target.style.opacity = 0; compselect.style.opacity = 0 },1500)}\n    }\n\n\n    \n\n\n    // const repeater = (decide) => {\n        \n    //     let newarray = []\n    //     for (var i = 0; i < 5; i++) {\n    //         newarray.push(decide === 0 ? Math.floor(Math.random() * (window.innerHeight - 50)): decide === 1 ? Math.floor(Math.random() * (window.innerWidth - 25) + 50) : Math.floor(Math.random()*360))\n    //     }\n    //     if (decide === 0)\n    //         setTop(newarray)\n    //     else if (decide === 1)\n    //         setBottom(newarray)\n    //     else\n    //         setRotate(newarray)\n    //     console.log(top)\n    // }\n\n    const menuHandlre = () => {\n        setMenu(false)\n        let cardsetArray = [];\n\n        for (var i = 0; i < 30; i++) {\n            const randomselector = Math.floor(Math.random() * 3)\n            cardsetArray.push(randomselector===0 ? `Rock${i}`:randomselector===1 ? `Paper${i}` : `Scissors${i}`)\n        }\n        setCardset(cardsetArray)\n    }\n\n    const [userturn, setUserturn] = useState(true)\n\n    const resetHandlre = (e) => {\n        e.preventDefault()\n        setCardset()\n        setInstruct(false)\n        setMenu(true)\n        setPick(3)\n        setPlayercards([])\n        setCompcards([])\n        setCompfinish(false)\n        setComphasit([])\n        setUserturn(true)\n        setCompscore(0)\n        setPlayerscore(0)\n        setResult(\"\")\n        setCardslength(3)\n    }\n\n    (() => {\n            // let newarray = []\n\n            // for (var i = 0; i < 30; i++) {\n            //     const randomselector = Math.floor(Math.random() * 3)\n                \n            //     newarray.push(randomselector===0 ? 'rock':randomselector===1 ? 'paper' : 'scissors')\n            // }\n            // console.log(newarray)\n\n\n    })()\n    return (\n        <div className=\"rockps__container\">\n            {menu ?\n                <div>\n                    <h1>ROCK, PAPER, SCISSORS</h1>\n                    <button onMouseUp={menuHandlre}>play</button>\n                    <div className=\"instruct__button\" onMouseUp={()=>setInstruct(!instruct)}>?</div>\n                    {instruct ?\n                        <div className=\"instruction__container\" onMouseUp={()=>setInstruct(!instruct)}>\n                            \n                            <div className=\"instructions\">\n                                <p>\n                                    <span style={{ fontSize: 30, marginBottom: 10 }}>Directive:</span>\n                                30 cards, each draw upon them a rock, paper or scissors randomly, will be placed upon the board.<br/>\n                                User will be first to pick 3 cards before CPU will have its turn.<br/><br/>\n                                After both players have decided, each player will have to pick one of the three on their deck the outcome of the match.<br/>\n                                Rock {`>`} Scissors {`>`} Papers {`>`} Rock. <br/>It's best of 3.<br/>The rules are simple.\n                                </p>\n                            </div>\n                    \n                        </div> : \"\"}\n                </div> :\n                <div id=\"start__container\">\n                    <button className=\"reset\" onMouseUp={resetHandlre}>RESET</button>\n                    <div className=\"scoreboard\">\n                        <span className=\"playerscore\">{playerscore}</span>\n                        <span>-</span>\n                        <span className=\"compscore\">{compscore}</span>\n                    </div>\n                    <span className={`result ${result ? 'animate' : ''}`}>{result}</span>\n                    {\n                        [...new Array(30)].map((e,i) => {\n                            return ( <span className=\"cards\" onMouseUp={cardsHandlre} key={i} style={{'--r':`${(i*8)-295}deg`,animationName:compfinish ? 'notpan':'pan'}}><p className={`card${i}`}></p></span> )\n                        })\n                    }\n                    \n                     {/* (result === \"WIN\" || result === \"LOSE\" || result === \"DRAW\") ? \"fill\": \"none\" */}\n                    <div className=\"playercard__holder\" style={{pointerEvents: \"\"}}>\n                        <span className=\"player\" style={{pointerEvents: compfinish ? \"fill\": result !== \"\" ? \"none\" : \"none\", backgroundImage: playercards[0] ? `url(${playercards[0].replace(/[0-9]/g,'')==='Scissors' ? Scissors : playercards[0].replace(/[0-9]/g,'')==='Paper' ? Paper : Rock})`: \"\"}} onMouseUp={cardSelectedfromDeck}></span>\n                        <span className=\"player\" style={{pointerEvents: compfinish ? \"fill\": result !== \"\" ? \"none\" : \"none\", backgroundImage: playercards[1] ? `url(${playercards[1].replace(/[0-9]/g,'')==='Scissors' ? Scissors : playercards[1].replace(/[0-9]/g,'')==='Paper' ? Paper : Rock})`: \"\"}} onMouseUp={cardSelectedfromDeck}></span>\n                        <span className=\"player\" style={{pointerEvents: compfinish ? \"fill\": result !== \"\" ? \"none\" : \"none\", backgroundImage: playercards[2] ? `url(${playercards[2].replace(/[0-9]/g,'')==='Scissors' ? Scissors : playercards[2].replace(/[0-9]/g,'')==='Paper' ? Paper : Rock})`: \"\"}} onMouseUp={cardSelectedfromDeck}></span>\n                    </div>\n                    <div className=\"compcard__holder\">\n                        <span style={{}} className=\"comp noshow\"></span>\n                        <span style={{}} className=\"comp noshow\"></span>\n                        <span style={{}} className=\"comp noshow\"></span>\n                    </div>\n\n                    {/* backgroundImage: compcards[0] ? `url(${compcards[0].replace(/[0-9]/g,'')==='Scissors' ? Scissors : compcards[0].replace(/[0-9]/g,'')==='Paper' ? Paper : Rock})`: \"\"\n                    backgroundImage: compcards[1] ? `url(${compcards[1].replace(/[0-9]/g,'')==='Scissors' ? Scissors : compcards[1].replace(/[0-9]/g,'')==='Paper' ? Paper : Rock})`: \"\"\n                    backgroundImage: compcards[2] ? `url(${compcards[2].replace(/[0-9]/g,'')==='Scissors' ? Scissors : compcards[2].replace(/[0-9]/g,'')==='Paper' ? Paper : Rock})`: \"\" */}\n\n                    {/* <h1>Pick {pick} cards</h1>\n                    {\n                        top.map((item, i) => {\n                            return (\n                                <span onMouseUp={cardHandlre} key={i} style={{ top: item, left: bottom[i], transform: `rotateZ(${rotate[i]}deg)` }}><p></p><p></p></span>)\n                    })\n                    } */}\n\n                </div>\n        }\n        </div>\n    )\n}\n\nexport default Rockps\n","import React from 'react'\r\nimport './Fourofour.css'\r\nfunction fourofour() {\r\n    return (\r\n        <div id=\"four__container\">\r\n            <h1>404</h1>\r\n            <h3>Page is still in assembly...</h3>\r\n            <h3>Come back another time.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default fourofour\r\n","import React from 'react'\r\nimport './Navigator.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Navigator() {\r\n    return (\r\n        <nav>\r\n            <Link to=\"/\" className=\"link\">\r\n                <p>GAMBLE</p>\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigator\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../App.css'\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home__container\">\r\n        <Link className=\"link\" to=\"/rock-paper-scissors\"><span>Chimpanzee Test</span></Link>\r\n        <Link className=\"link\" to=\"/double-memory\"><span>Number Test</span></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\nimport Rockps from './Components/Rockps'\n// import Doublememory from './Components/Doublememory'\nimport Fourofour from './Components/Fourofour'\nimport Navigator from './Components/Navigator'\nimport Home from './Components/Home'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      \n      <div className=\"App\"> \n      <Navigator />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/rock-paper-scissors\" exact component={Rockps} />\n          <Route path=\"/double-memory\" exact component={Fourofour} />\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}